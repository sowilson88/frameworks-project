{"version":3,"sources":["Context.js","Reducer.js","components/Nav.js","components/AddNote.js","components/Note.js","components/NoteList.js","components/EditNote.js","App.js","reportWebVitals.js","index.js"],"names":["NotesContext","React","createContext","currentNote","notes","id","text","reducer","state","action","type","payload","deletedNotes","filter","note","Math","floor","random","newNote","addedNotes","updatedNote","updatedNoteIndex","findIndex","slice","Nav","className","AddNote","useContext","dispatch","useState","value","setValue","ref","useRef","useEffect","current","focus","onSubmit","event","preventDefault","trim","alert","onChange","target","Note","onClick","NoteList","map","i","EditNote","name","cols","rows","App","initialState","useReducer","NotesReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2827d5cf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NotesContext = React.createContext({\r\n    currentNote: null,\r\n    notes: [\r\n        {id: 1, text: 'Call vet'},\r\n        {id: 2, text: 'Do Homework'},\r\n        {id: 3, text: 'Set up tattoo appointment!'},\r\n    ]\r\n});\r\n\r\nexport default NotesContext\r\n","export default function reducer(state, action){\r\n    switch (action.type){\r\n        case 'SET_CURRENT_NOTE':\r\n            return{\r\n                ...state,\r\n                currentNote: action.payload\r\n            };\r\n        case 'DELETE_NOTE':\r\n                const deletedNotes = state.notes.filter(\r\n                  note => note.id !== action.payload\r\n                );\r\n          \r\n            return {\r\n                ...state,\r\n                notes: deletedNotes\r\n            };\r\n        case 'ADD_NOTE':\r\n            const id = Math.floor(Math.random() * 100) + 1\r\n            const newNote = {\r\n                id: (''),\r\n                text: action.payload\r\n            }\r\n\r\n            const addedNotes = [...state.notes, newNote]\r\n\r\n            return {\r\n                ...state,\r\n                notes: addedNotes\r\n            };\r\n        case 'UPDATE_NOTE':\r\n            const updatedNote = {\r\n                ...state.currentNote,\r\n                text: action.payload\r\n            }\r\n\r\n            const updatedNoteIndex = state.notes.findIndex(\r\n                note => note.id === state.currentNote.id\r\n            )\r\n\r\n            const updatedNotes = [\r\n                ...state.notes.slice(0 , updatedNoteIndex),\r\n                updatedNote,\r\n                ...state.notes.slice(updatedNoteIndex + 1)\r\n            ]\r\n\r\n            return {\r\n                currentNote: null,\r\n                notes: updatedNotes\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nconst Nav = () => {\r\n    return (\r\n        <header className='nav'>\r\n            <>\r\n                <h1>\r\n                My Note Pad\r\n                </h1>\r\n            </>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useContext, useRef, useEffect} from 'react';\r\nimport NotesContext from '../Context'\r\n\r\nconst AddNote = () => {\r\n    const { state, dispatch } = useContext(NotesContext)\r\n    const [value, setValue] = useState('')\r\n\r\n    let ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current.focus();\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (value.trim() === '') {\r\n            alert(\"Oops, I can't add a blank note!\")\r\n        } else {\r\n            dispatch({ type: 'ADD_NOTE', payload: value })\r\n            setValue('');\r\n        }\r\n    }\r\n    return (\r\n        <div className='noteForm'>\r\n            <form onSubmit={ handleSubmit} action=\"\">\r\n                <input type=\"text\" ref={ref} \r\n                onChange={ handleChange } value={ value }/>\r\n                <button className='noteFormBtn'>Save Note</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","import React, { useContext } from 'react'\r\nimport NotesContext from '../Context'\r\n\r\nconst Note = ({ note }) => {\r\n    const { dispatch } = useContext(NotesContext);\r\n\r\n    return (\r\n        <div className='note'>\r\n            <h3>{note.text}</h3>\r\n            <div className='btnContainer'>\r\n                <button onClick={() => \r\n                    dispatch({ type: 'SET_CURRENT_NOTE', payload: note})} \r\n                    className=\"edit\">Edit</button>\r\n                <button onClick={() =>\r\n                    dispatch({ type: 'DELETE_NOTE', payload: note.id })}\r\n                    className=\"delete\">Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React, { useContext } from 'react';\r\nimport NotesContext from '../Context';\r\nimport Note from './Note'\r\n\r\nconst NoteList = () => {\r\n    const { state } = useContext(NotesContext);\r\n    return (\r\n        <div className='notesContainer'> \r\n            {state.notes.map((note, i) => {\r\n                return <Note note={note} key={i}/>;\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteList\r\n","import React, { useState, useContext, useRef, useEffect} from 'react';\r\nimport NotesContext from '../Context'\r\n\r\n\r\nconst EditNote = () => {\r\n    const { state, dispatch } = useContext(NotesContext);\r\n    const [value, setValue] = useState(state.currentNote.text);\r\n\r\n    let ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current.focus();\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (value.trim() === '') {\r\n            alert(\"Oops, I can't add a blank note!\")\r\n        } else {\r\n            dispatch({ type: 'UPDATE_NOTE', payload: value })\r\n            setValue('')\r\n        }\r\n    }\r\n    return (\r\n        <div className='noteForm'>\r\n            <form onSubmit = {handleSubmit} action=\"\">\r\n                <textarea \r\n                className='textArea'\r\n                ref={ref} \r\n                onChange={handleChange} \r\n                value={value}\r\n                name=\"\" id=\"\" cols=\"30\" rows=\"10\"/>\r\n                    <div>\r\n                        <button className='noteFormBtn'>Update Note</button>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditNote\r\n","import React, {useContext, useReducer} from 'react';\nimport NotesContext from './Context'\nimport NotesReducer from './Reducer'\nimport Nav from './components/Nav'\nimport AddNote from './components/AddNote'\nimport NoteList from './components/NoteList'\nimport EditNote from './components/EditNote'\n\nconst App = () => {\n  const initialState = useContext(NotesContext);\n  const [state, dispatch] = useReducer(NotesReducer, initialState)\n  return (\n<div className='container'>\n  <NotesContext.Provider value={{ state, dispatch }}>\n    <Nav />\n    {state.currentNote === null ? (\n      <div>    \n        <AddNote />\n        <NoteList />\n      </div>\n    ) : <EditNote />}\n    \n  </NotesContext.Provider>\n</div>\n  )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}